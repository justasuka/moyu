<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.cfl.cflwork.dao.admin.admin.AdminDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
            <when test="pager!=null and pager.includes!=null">
                <foreach collection="pager.includes" item="field" separator=",">
                    T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                </foreach>
            </when>
            <when test="pager!=null and pager.excludes!=null">
                <trim suffixOverrides=",">
                    <if test="!pager.excludes.contains('id')">
                        T.id,
                    </if>
                    <if test="!pager.excludes.contains('username')">
                        T.username,
                    </if>
                    <if test="!pager.excludes.contains('password')">
                        T.password,
                    </if>
                    <if test="!pager.excludes.contains('realName')">
                        T.real_name,
                    </if>
                    <if test="!pager.excludes.contains('phone')">
                        T.phone,
                    </if>
                    <if test="!pager.excludes.contains('email')">
                        T.email,
                    </if>
                    <if test="!pager.excludes.contains('portrait')">
                        T.portrait,
                    </if>
                    <if test="!pager.excludes.contains('departmentId')">
                        T.department_id,
                    </if>
                    <if test="!pager.excludes.contains('departmentName')">
                        T.department_name,
                    </if>
                    <if test="!pager.excludes.contains('createTime')">
                        T.create_time,
                    </if>
                    <if test="!pager.excludes.contains('updateTime')">
                        T.update_time,
                    </if>
                    <if test="!pager.excludes.contains('cityId')">
                        T.city_id,
                    </if>
                    <if test="!pager.excludes.contains('provinceId')">
                        T.province_id,
                    </if>
                    <if test="!pager.excludes.contains('jobId')">
                        T.job_id,
                    </if>
                    <if test="!pager.excludes.contains('jobName')">
                        T.job_name,
                    </if>
                </trim>
            </when>
            <otherwise>
                T.*
            </otherwise>
        </choose>
    </sql>
    <sql id="match">
        <where>
            <if test="id!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('id')">
                        <trim suffixOverrides=",">
                            T.id like concat('%',#{id},'%')
                        </trim>
                    </when>
                    <otherwise>
                        T.id=#{id}
                    </otherwise>
                </choose>
            </if>
            <if test="username!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('username')">
                        <trim suffixOverrides=",">
                            and T.username like concat('%',#{username},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.username=#{username}
                    </otherwise>
                </choose>
            </if>
            <if test="password!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('password')">
                        <trim suffixOverrides=",">
                            and T.password like concat('%',#{password},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.password=#{password}
                    </otherwise>
                </choose>
            </if>
            <if test="realName!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('realName')">
                        <trim suffixOverrides=",">
                            and T.real_name like concat('%',#{realName},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.real_name=#{realName}
                    </otherwise>
                </choose>
            </if>
            <if test="phone!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('phone')">
                        <trim suffixOverrides=",">
                            and T.phone like concat('%',#{phone},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.phone=#{phone}
                    </otherwise>
                </choose>
            </if>
            <if test="email!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('email')">
                        <trim suffixOverrides=",">
                            and T.email like concat('%',#{email},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.email=#{email}
                    </otherwise>
                </choose>
            </if>
            <if test="portrait!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('portrait')">
                        <trim suffixOverrides=",">
                            and T.portrait like concat('%',#{portrait},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.portrait=#{portrait}
                    </otherwise>
                </choose>
            </if>
            <if test="departmentId!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('departmentId')">
                        <trim suffixOverrides=",">
                            and T.department_id like concat('%',#{departmentId},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.department_id=#{departmentId}
                    </otherwise>
                </choose>
            </if>
            <if test="departmentName!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('departmentName')">
                        <trim suffixOverrides=",">
                            and T.department_name like concat('%',#{departmentName},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.department_name=#{departmentName}
                    </otherwise>
                </choose>
            </if>
            <if test="createTime!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('createTime')">
                        <trim suffixOverrides=",">
                            and T.create_time like concat('%',#{createTime},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.create_time=#{createTime}
                    </otherwise>
                </choose>
            </if>
            <if test="updateTime!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('updateTime')">
                        <trim suffixOverrides=",">
                            and T.update_time like concat('%',#{updateTime},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.update_time=#{updateTime}
                    </otherwise>
                </choose>
            </if>
            <if test="cityId!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('cityId')">
                        <trim suffixOverrides=",">
                            and T.city_id like concat('%',#{cityId},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.city_id=#{cityId}
                    </otherwise>
                </choose>
            </if>
            <if test="provinceId!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('provinceId')">
                        <trim suffixOverrides=",">
                            and T.province_id like concat('%',#{provinceId},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.province_id=#{provinceId}
                    </otherwise>
                </choose>
            </if>
            <if test="jobId!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('jobId')">
                        <trim suffixOverrides=",">
                            and T.job_id like concat('%',#{jobId},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.job_id=#{jobId}
                    </otherwise>
                </choose>
            </if>
            <if test="jobName!=null">
                <choose>
                    <when test="pager!=null and pager.like!=null and pager.like.contains('jobName')">
                        <trim suffixOverrides=",">
                            and T.job_name like concat('%',#{jobName},'%')
                        </trim>
                    </when>
                    <otherwise>
                        and T.job_name=#{jobName}
                    </otherwise>
                </choose>
            </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findAdminListByCondition" parameterType="Admin" resultType="Admin">
        select
        <include refid="projection"/>
        from admin T
        <include refid="match"/>
        <include refid="sort"/>
        <include refid="page"/>
    </select>

    <select id="findAdminAllList" parameterType="Admin" resultType="Admin">
        select
        <include refid="projection"/>
        from admin T
        <include refid="match"/>
        <include refid="sort"/>
    </select>

    <select id="findAdminCountByCondition" parameterType="Admin" resultType="long">
        select count(*) from admin T
        <include refid="match"/>
    </select>
    <select id="findAdminById" resultType="Admin">
        select * from admin where id=#{id}
    </select>
    <select id="findOneAdminByCondition" parameterType="Admin" resultType="Admin">
        select
        <include refid="projection"/>
        from admin T
        <include refid="match"/>
    </select>
    <insert id="saveAdmin" parameterType="Admin">
        insert into admin
        (
        id,
        username,
        password,
        real_name,
        phone,
        email,
        portrait,
        department_id,
        department_name,
        create_time,
        update_time,
        city_id,
        province_id,
        job_id,
        job_name
        ) values
        (
        #{id}
        ,
        #{username}
        ,
        #{password}
        ,
        #{realName}
        ,
        #{phone}
        ,
        #{email}
        ,
        #{portrait}
        ,
        #{departmentId}
        ,
        #{departmentName}
        ,
        now()
        ,
        #{updateTime}
        ,
        #{cityId}
        ,
        #{provinceId}
        ,
        #{jobId}
        ,
        #{jobName}

        )
    </insert>
    <update id="updateAdmin" parameterType="Admin">
        update admin
        <set>
            <if test="username!=null ">
                username=#{username},
            </if>
            <if test="password!=null ">
                password=#{password},
            </if>
            <if test="realName!=null ">
                real_name=#{realName},
            </if>
            <if test="phone!=null ">
                phone=#{phone},
            </if>
            <if test="email!=null ">
                email=#{email},
            </if>
            <if test="portrait!=null ">
                portrait=#{portrait},
            </if>
            <if test="departmentId!=null ">
                department_id=#{departmentId},
            </if>
            <if test="departmentName!=null ">
                department_name=#{departmentName},
            </if>
            <if test="createTime!=null ">
                create_time=#{createTime},
            </if>
            update_time=now(),
            <if test="cityId!=null ">
                city_id=#{cityId},
            </if>
            <if test="provinceId!=null ">
                province_id=#{provinceId},
            </if>
            <if test="jobId!=null ">
                job_id=#{jobId},
            </if>
            <if test="jobName!=null ">
                job_name=#{jobName}
            </if>
        </set>
        where id=#{id}
    </update>
    <delete id="deleteAdmin" >
        delete from admin where id=#{id}
    </delete>
    <delete id="deleteAdminByCondition" >
        delete T from admin T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveAdmin" parameterType="Admin">
        INSERT INTO admin (  id,  username,  password,  real_name,  phone,  email,  portrait,  department_id,  department_name,  create_time,  update_time,  city_id,  province_id,  job_id,  job_name )
        VALUES
        <foreach collection="list" item="admin" separator=",">
            (  #{admin.id},  #{admin.username},  #{admin.password},  #{admin.realName},  #{admin.phone},  #{admin.email},  #{admin.portrait},  #{admin.departmentId},  #{admin.departmentName},  #{admin.createTime},  #{admin.updateTime},  #{admin.cityId},  #{admin.provinceId},  #{admin.jobId},  #{admin.jobName}  )
        </foreach>
    </insert>
    <delete id="batchDeleteAdmin" parameterType="string">
        delete from admin where id in
        <foreach item="rowData" collection="array" open="(" separator="," close=")">
            #{rowData}
        </foreach>
    </delete>
    <update id="batchUpdateAdmin" parameterType="Admin">
        update admin
        <set>
            <if test="username!=null ">
                username=#{username},
            </if>
            <if test="password!=null ">
                password=#{password},
            </if>
            <if test="realName!=null ">
                real_name=#{realName},
            </if>
            <if test="phone!=null ">
                phone=#{phone},
            </if>
            <if test="email!=null ">
                email=#{email},
            </if>
            <if test="portrait!=null ">
                portrait=#{portrait},
            </if>
            <if test="departmentId!=null ">
                department_id=#{departmentId},
            </if>
            <if test="departmentName!=null ">
                department_name=#{departmentName},
            </if>
            <if test="createTime!=null ">
                create_time=#{createTime},
            </if>
            update_time=now(),
            <if test="cityId!=null ">
                city_id=#{cityId},
            </if>
            <if test="provinceId!=null ">
                province_id=#{provinceId},
            </if>
            <if test="jobId!=null ">
                job_id=#{jobId},
            </if>
            <if test="jobName!=null ">
                job_name=#{jobName}
            </if>
        </set>
        where id in
        <foreach item="rowData" collection="rowData" open="(" separator="," close=")">
            #{rowData}
        </foreach>
    </update>
    <select id="getAdminTableField" resultType="ExcelExport">
        select column_name as 'key',column_comment as 'name' from information_schema.columns where table_name='admin'
        <!--####### 如果有多个数据库的表一致的情况下，需要加上此标签，例如 archives and table_schema = 'archives' #########-->
    </select>
    <!--##################################################generated code end,do not update######################################################################-->
    <select id="findCheckedRoloIdsByAdminId" resultType="java.lang.String">
        select SR.id
         FROM admin A
         INNER JOIN admin_role AR
         ON A.id=AR.admin_id
         INNER JOIN sys_role SR
         ON AR.role_id= SR.id
         where A.id=#{adminId}
         group by SR.id
    </select>
    <select id="findSysFuncPermsByAdminId" resultType="top.cfl.cflwork.pojo.admin.SysPerm">
        select SP.identify,SP.url_path
                 FROM admin A
                 INNER JOIN admin_role AR
                 ON A.id=AR.admin_id
                 INNER JOIN sys_role SR
                 ON AR.role_id= SR.id
                 inner join role_perm RP on SR.id=RP.role_id
                         inner join sys_perm SP on SP.id=RP.perm_id
                         where <if test="adminId!=null">A.id=#{adminId} and </if>SP.type=1
                         group by SP.id
    </select>
    <select id="findSysDepartmentList" resultType="top.cfl.cflwork.pojo.admin.Admin">
        select DISTINCT A.department_name as departmentName, A.department_id as departmentId FROM admin A
    </select>
    <select id="findAdminListById" resultType="top.cfl.cflwork.pojo.admin.Admin">
        select * FROM admin
        where id in
        <foreach item="rowData" collection="array" open="(" separator="," close=")">
            #{rowData}
        </foreach>
    </select>
</mapper>