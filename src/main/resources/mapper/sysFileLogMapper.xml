<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.cfl.cflwork.dao.SysFileLogDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('fileId')">
                             T.file_id,
                         </if>
                         <if test="!pager.excludes.contains('adminId')">
                             T.admin_id,
                         </if>
                         <if test="!pager.excludes.contains('adminName')">
                             T.admin_name,
                         </if>
                         <if test="!pager.excludes.contains('operation')">
                             T.operation,
                         </if>
                         <if test="!pager.excludes.contains('target')">
                             T.target,
                         </if>
                         <if test="!pager.excludes.contains('comment')">
                             T.comment,
                         </if>
                         <if test="!pager.excludes.contains('createTime')">
                             T.create_time,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
        <where>
              <if test="id!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('id')">
                            <trim suffixOverrides=",">
                                 T.id like concat('%',#{id},'%')
                            </trim>
                         </when>
                         <otherwise>
                             T.id=#{id}
                         </otherwise>
                      </choose>
              </if>
              <if test="fileId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('fileId')">
                            <trim suffixOverrides=",">
                                and T.file_id like concat('%',#{fileId},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.file_id=#{fileId}
                         </otherwise>
                      </choose>
              </if>
              <if test="adminId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('adminId')">
                            <trim suffixOverrides=",">
                                and T.admin_id like concat('%',#{adminId},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.admin_id=#{adminId}
                         </otherwise>
                      </choose>
              </if>
              <if test="adminName!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('adminName')">
                            <trim suffixOverrides=",">
                                and T.admin_name like concat('%',#{adminName},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.admin_name=#{adminName}
                         </otherwise>
                      </choose>
              </if>
              <if test="operation!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('operation')">
                            <trim suffixOverrides=",">
                                and T.operation like concat('%',#{operation},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.operation=#{operation}
                         </otherwise>
                      </choose>
              </if>
              <if test="target!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('target')">
                            <trim suffixOverrides=",">
                                and T.target like concat('%',#{target},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.target=#{target}
                         </otherwise>
                      </choose>
              </if>
              <if test="comment!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('comment')">
                            <trim suffixOverrides=",">
                                and T.comment like concat('%',#{comment},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.comment=#{comment}
                         </otherwise>
                      </choose>
              </if>
              <if test="createTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('createTime')">
                            <trim suffixOverrides=",">
                                and T.create_time like concat('%',#{createTime},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.create_time=#{createTime}
                         </otherwise>
                      </choose>
              </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findSysFileLogListByCondition" parameterType="SysFileLog" resultType="SysFileLog">
        select
         <include refid="projection"/>
        ,T3.portrait as portrait
        from sys_file_log T
        left join admin T3 on T.admin_id=T3.id
         <include refid="match"/>
         <include refid="sort"/>
         <include refid="page"/>
    </select>

    <select id="findSysFileLogAllList" parameterType="SysFileLog" resultType="SysFileLog">
            select
             <include refid="projection"/>
             from sys_file_log T
             <include refid="match"/>
             <include refid="sort"/>
        </select>

    <select id="findSysFileLogCountByCondition" parameterType="SysFileLog" resultType="long">
        select count(*) from sys_file_log T
        <include refid="match"/>
    </select>
    <select id="findSysFileLogById" resultType="SysFileLog">
        select * from sys_file_log where id=#{id}
    </select>
    <select id="findOneSysFileLogByCondition" parameterType="SysFileLog" resultType="SysFileLog">
        select
         <include refid="projection"/>
         from sys_file_log T
        <include refid="match"/>
    </select>
    <insert id="saveSysFileLog" parameterType="SysFileLog">
        insert into sys_file_log
         (
            id,
            file_id,
            admin_id,
            admin_name,
            operation,
            target,
            comment,
            create_time
        ) values
         (
                #{id}
                ,
                #{fileId}
                ,
                #{adminId}
                ,
                #{adminName}
                ,
                #{operation}
                ,
                #{target}
                ,
                #{comment}
                ,
                now()
                
         )
    </insert>
    <update id="updateSysFileLog" parameterType="SysFileLog">
        update sys_file_log
        <set>
                    <if test="fileId!=null ">
                        file_id=#{fileId},
                    </if>
                    <if test="adminId!=null ">
                        admin_id=#{adminId},
                    </if>
                    <if test="adminName!=null ">
                        admin_name=#{adminName},
                    </if>
                    <if test="operation!=null ">
                        operation=#{operation},
                    </if>
                    <if test="target!=null ">
                        target=#{target},
                    </if>
                    <if test="comment!=null ">
                        comment=#{comment},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime}
                    </if>
          </set>
         where id=#{id}
    </update>
    <delete id="deleteSysFileLog" >
        delete from sys_file_log where id=#{id}
    </delete>
    <delete id="deleteSysFileLogByCondition" >
        delete T from sys_file_log T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveSysFileLog" parameterType="SysFileLog">
        INSERT INTO sys_file_log (  id,  file_id,  admin_id,  admin_name,  operation,  target,  comment,  create_time )
        VALUES
        <foreach collection="list" item="sysFileLog" separator=",">
            (  #{sysFileLog.id},  #{sysFileLog.fileId},  #{sysFileLog.adminId},  #{sysFileLog.adminName},  #{sysFileLog.operation},  #{sysFileLog.target},  #{sysFileLog.comment},  #{sysFileLog.createTime}  )
        </foreach>
    </insert>
    <delete id="batchDeleteSysFileLog" parameterType="string">
        delete from sys_file_log where id in
        <foreach item="rowData" collection="rowData" open="(" separator="," close=")">
            #{rowData}
        </foreach>
    </delete>
    <update id="batchUpdateSysFileLog" parameterType="SysFileLog">
        update sys_file_log
        <set>
                    <if test="fileId!=null ">
                        file_id=#{fileId},
                    </if>
                    <if test="adminId!=null ">
                        admin_id=#{adminId},
                    </if>
                    <if test="adminName!=null ">
                        admin_name=#{adminName},
                    </if>
                    <if test="operation!=null ">
                        operation=#{operation},
                    </if>
                    <if test="target!=null ">
                        target=#{target},
                    </if>
                    <if test="comment!=null ">
                        comment=#{comment},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime}
                    </if>
          </set>
         where id in
           <foreach item="rowData" collection="rowData" open="(" separator="," close=")">
               #{rowData}
           </foreach>
    </update>
    <select id="getSysFileLogTableField" resultType="ExcelExport">
            select column_name as 'key',column_comment as 'name' from information_schema.columns where table_name='sys_file_log'
            <!--####### 如果有多个数据库的表一致的情况下，需要加上此标签，例如 archives and table_schema = 'archives' #########-->
        </select>
    <!--##################################################generated code end,do not update######################################################################-->
    <select id="findSysFileLogByFileId" parameterType="SysFileLog" resultType="SysFileLog">
        select
        <include refid="projection"/>
        ,T3.portrait as portrait
        from sys_file_log  T
        left join admin T3 on T.admin_id=T3.id
        where T.file_id in
        (SELECT T2.id FROM sys_file T2 WHERE T2.path LIKE concat(#{filePath},'%'))
        <include refid="sort"/>
        <include refid="page"/>
    </select>
    <select id="findCountSysFileLogByFileId" parameterType="SysFileLog" resultType="long">
        select
        count(*)
        from sys_file_log T where file_id in
        (SELECT T2.id FROM sys_file T2 WHERE T2.path LIKE concat(#{filePath},'%'))

    </select>
    <delete id="delfileLogWhitoutID" >
        delete from sys_file_log where file_id not in  (SELECT id  from sys_file)
    </delete>

    <select id="findSysFileLogByWithPath" parameterType="SysFileLog" resultType="SysFileLog">
        select
        <include refid="projection"/>
        from sys_file_log T where T.file_id in
        (SELECT T2.id FROM sys_file T2 WHERE  T2.path in
        <foreach item="rowData" collection="rowData" open="(" separator="," close=")">
            #{rowData}
        </foreach>   )

        <include refid="sort"/>
        <include refid="page"/>
    </select>
</mapper>