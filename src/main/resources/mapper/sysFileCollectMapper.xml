<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.cfl.cflwork.dao.SysFileCollectDao">
    <!--########################################################generated code start,do not update################################################################-->
    <sql id="projection">
        <choose>
             <when test="pager!=null and pager.includes!=null">
                 <foreach collection="pager.includes" item="field" separator=",">
                     T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(field)}
                 </foreach>
             </when>
             <when test="pager!=null and pager.excludes!=null">
                 <trim suffixOverrides=",">
                         <if test="!pager.excludes.contains('id')">
                             T.id,
                         </if>
                         <if test="!pager.excludes.contains('adminId')">
                             T.admin_id,
                         </if>
                         <if test="!pager.excludes.contains('adminName')">
                             T.admin_name,
                         </if>
                         <if test="!pager.excludes.contains('fileId')">
                             T.file_id,
                         </if>
                         <if test="!pager.excludes.contains('isCollect')">
                             T.is_collect,
                         </if>
                         <if test="!pager.excludes.contains('createTime')">
                             T.create_time,
                         </if>
                         <if test="!pager.excludes.contains('updateTime')">
                             T.update_time,
                         </if>
                 </trim>
             </when>
             <otherwise>
                 T.*
             </otherwise>
         </choose>
    </sql>
    <sql id="match">
        <where>
              <if test="id!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('id')">
                            <trim suffixOverrides=",">
                                 T.id like concat('%',#{id},'%')
                            </trim>
                         </when>
                         <otherwise>
                             T.id=#{id}
                         </otherwise>
                      </choose>
              </if>
              <if test="adminId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('adminId')">
                            <trim suffixOverrides=",">
                                and T.admin_id like concat('%',#{adminId},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.admin_id=#{adminId}
                         </otherwise>
                      </choose>
              </if>
              <if test="adminName!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('adminName')">
                            <trim suffixOverrides=",">
                                and T.admin_name like concat('%',#{adminName},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.admin_name=#{adminName}
                         </otherwise>
                      </choose>
              </if>
              <if test="fileId!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('fileId')">
                            <trim suffixOverrides=",">
                                and T.file_id like concat('%',#{fileId},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.file_id=#{fileId}
                         </otherwise>
                      </choose>
              </if>
              <if test="isCollect!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('isCollect')">
                            <trim suffixOverrides=",">
                                and T.is_collect like concat('%',#{isCollect},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.is_collect=#{isCollect}
                         </otherwise>
                      </choose>
              </if>
              <if test="createTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('createTime')">
                            <trim suffixOverrides=",">
                                and T.create_time like concat('%',#{createTime},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.create_time=#{createTime}
                         </otherwise>
                      </choose>
              </if>
              <if test="updateTime!=null">
                    <choose>
                         <when test="pager!=null and pager.like!=null and pager.like.contains('updateTime')">
                            <trim suffixOverrides=",">
                                and T.update_time like concat('%',#{updateTime},'%')
                            </trim>
                         </when>
                         <otherwise>
                            and T.update_time=#{updateTime}
                         </otherwise>
                      </choose>
              </if>
            <if test="pager!=null and pager.rangeField!=null and pager.rangeArray!=null and pager.rangeArray.length==2">
                <foreach collection="pager.rangeArray" item="item"  index="i">
                    <if test="i==0 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &gt;= #{item}
                    </if>
                    <if test="i==1 and item!=null">
                        and ${@cn.hutool.core.util.StrUtil@toUnderlineCase(pager.rangeField)} &lt;= #{item}
                    </if>
                </foreach>

            </if>
        </where>
    </sql>
    <sql id="sort">
        <if test="pager!=null and pager.sortField!=null and pager.sortOrder!=null">
            order by
            <foreach collection="pager.sortField.split(',')" item="s" index="i" separator=",">
                T.${@cn.hutool.core.util.StrUtil@toUnderlineCase(s)} ${pager.sortOrder.split(',')[i]}
            </foreach>
        </if>
    </sql>
    <sql id="page">
        <if test="pager!=null and  pager.paging">
            limit #{pager.beginRow},#{pager.pageSize}
        </if>
    </sql>


    <select id="findSysFileCollectListByCondition" parameterType="SysFileCollect" resultType="SysFileCollect">
        select
         <include refid="projection"/>
         from sys_file_collect T
         <include refid="match"/>
         <include refid="sort"/>
         <include refid="page"/>
    </select>

    <select id="findSysFileCollectAllList" parameterType="SysFileCollect" resultType="SysFileCollect">
            select
             <include refid="projection"/>
             from sys_file_collect T
             <include refid="match"/>
             <include refid="sort"/>
        </select>

    <select id="findSysFileCollectCountByCondition" parameterType="SysFileCollect" resultType="long">
        select count(*) from sys_file_collect T
        <include refid="match"/>
    </select>
    <select id="findSysFileCollectById" resultType="SysFileCollect">
        select * from sys_file_collect where id=#{id}
    </select>
    <select id="findOneSysFileCollectByCondition" parameterType="SysFileCollect" resultType="SysFileCollect">
        select
         <include refid="projection"/>
         from sys_file_collect T
        <include refid="match"/>
    </select>
    <insert id="saveSysFileCollect" parameterType="SysFileCollect">
        insert into sys_file_collect
         (
            id,
            admin_id,
            admin_name,
            file_id,
            is_collect,
            create_time,
            update_time
        ) values
         (
                #{id}
                ,
                #{adminId}
                ,
                #{adminName}
                ,
                #{fileId}
                ,
                #{isCollect}
                ,
                now()
                ,
                #{updateTime}
                
         )
    </insert>
    <update id="updateSysFileCollect" parameterType="SysFileCollect">
        update sys_file_collect
        <set>
                    <if test="adminId!=null ">
                        admin_id=#{adminId},
                    </if>
                    <if test="adminName!=null ">
                        admin_name=#{adminName},
                    </if>
                    <if test="fileId!=null ">
                        file_id=#{fileId},
                    </if>
                    <if test="isCollect!=null ">
                        is_collect=#{isCollect},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime},
                    </if>
                    update_time=now()
          </set>
         where id=#{id}
    </update>
    <delete id="deleteSysFileCollect" >
        delete from sys_file_collect where id=#{id}
    </delete>
    <delete id="deleteSysFileCollectByCondition" >
        delete T from sys_file_collect T
        <include refid="match"/>
    </delete>
    <insert id="batchSaveSysFileCollect" parameterType="SysFileCollect">
        INSERT INTO sys_file_collect (  id,  admin_id,  admin_name,  file_id,  is_collect,  create_time,  update_time )
        VALUES
        <foreach collection="list" item="sysFileCollect" separator=",">
            (  #{sysFileCollect.id},  #{sysFileCollect.adminId},  #{sysFileCollect.adminName},  #{sysFileCollect.fileId},  #{sysFileCollect.isCollect},  #{sysFileCollect.createTime},  #{sysFileCollect.updateTime}  )
        </foreach>
    </insert>
    <delete id="batchDeleteSysFileCollect" parameterType="string">
        delete from sys_file_collect where id in
        <foreach item="rowData" collection="rowData" open="(" separator="," close=")">
            #{rowData}
        </foreach>
    </delete>
    <update id="batchUpdateSysFileCollect" parameterType="SysFileCollect">
        update sys_file_collect
        <set>
                    <if test="adminId!=null ">
                        admin_id=#{adminId},
                    </if>
                    <if test="adminName!=null ">
                        admin_name=#{adminName},
                    </if>
                    <if test="fileId!=null ">
                        file_id=#{fileId},
                    </if>
                    <if test="isCollect!=null ">
                        is_collect=#{isCollect},
                    </if>
                    <if test="createTime!=null ">
                        create_time=#{createTime},
                    </if>
                    update_time=now()
          </set>
         where id in
           <foreach item="rowData" collection="rowData" open="(" separator="," close=")">
               #{rowData}
           </foreach>
    </update>
    <select id="getSysFileCollectTableField" resultType="ExcelExport">
            select column_name as 'key',column_comment as 'name' from information_schema.columns where table_name='sys_file_collect'
            <!--####### 如果有多个数据库的表一致的情况下，需要加上此标签，例如 archives and table_schema = 'archives' #########-->
        </select>
    <!--##################################################generated code end,do not update######################################################################-->
    <select id="findSysFileCollectsCreateCount" parameterType="SysFileCollect" resultType="long">
        select count(*) from sys_file_collect T
        LEFT JOIN sys_file T1 on T.file_id=T1.id
        <include refid="match"/>
        and T1.is_delete="0"
    </select>
</mapper>